{
  "consumes": [
    "plain/text"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API Gateway Transactions service allows you to query the API transactions. API Transactions are generated (as events) everytime an API invocation happens. API Transactions may contain the details about the invocation such as request/response headers, request/response payloads, consumer applications and so on.  API Provider may choose to store these events to one or more destinations by using Log Invocation Policy. API Gateway provides different destination options to the API Provider (like API Gateway own data store, relational databases, Elastic Search etc.) where he/she would like to store these events to. By default, API Gateway is chosen as a storage destination for these events.\n\nIt is important to note that this REST API queries for the transactions data only from the API Gateway's default datastore.\n\nThere are multiple use cases for these transactions data. For instance, you can integrate this API with your billing system wherein these transactional data can be used to compute the usage history of your API for different consumers for monetization usecases. In other scenarios, the data extracted from this service can be used for custom report generation.Any valid API Gateway user can consume this REST service.",
    "title": "API Gateway Transactions Data Service",
    "version": "10.7"
  },
  "host": "localhost:5555",
  "basePath": "/rest/apigateway",
  "paths": {
    "/transactionalEvents/_count": {
      "get": {
        "security": [
          {
            "Basic": []
          }
        ],
        "description": "This method can be used to retrieve the number of transaction events for a given API/Application/Plan/Package for a specific period of time. Multiple request parameters of this method provide options to specify the request criteria to match the expected result and most of these input parameters supports regular expression in their values. Along with the mandatory parameters - fromDate and toDate, any one of the other filter criteria should be passed in the request.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getTransactionsCount",
        "parameters": [
          {
            "type": "string",
            "x-example": "apiName=PetStore",
            "description": "The name of the API  for which the invocation count is required.The exact name must be provided or regular expressions can be used like API_.*",
            "name": "apiName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "apiVersion=1.0",
            "description": "The version of the API",
            "name": "apiVersion",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "apiId=105e99ee-0e1b-4afa-8ff3-4322cf296558",
            "description": "The system generated id for an API.The id of an can be retrieved from the API details screen",
            "name": "apiId",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "applicationName=HostBasedIdentifier",
            "description": "The name of the Application for which the invocation count is required.The exact name must be provided or regular expressions can be used like APP_.*",
            "name": "applicationName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "applicationId=995e99ee-0e1b-4afa-8ff3-4322cf296587",
            "description": "The system generated id for an Application.The id of an can be retrieved from the Application details screen",
            "name": "applicationId",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "pakageName=TravelPackage",
            "description": "The name of the Package for which the invocation count is required.The exact name must be provided or regular expressions can be used like Package_.*",
            "name": "packageName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "apiId=685023ee-0e1b-4afa-8ff3-4322cf296566",
            "description": "The system generated id for a Package.The id of an can be retrieved from the Package details screen",
            "name": "packageId",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "planName=GoldPlan",
            "description": "The name of the Plan  for which the invocation count is required.The exact name must be provided or regular expressions can be used like Plan_.*",
            "name": "planName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "planId=785e99ee-0e1b-4afa-8ff3-4322cf296566",
            "description": "The system generated id for a Plan.The id of an can be retrieved from the Plan details screen",
            "name": "planId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "fromDate=2017-02-26 or fromDate=1488091324",
            "description": "This is the date from which the count has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter",
            "name": "fromDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "toDate=2017-02-27 or toDate=1488177724",
            "description": "This is the date to which the count has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter",
            "name": "toDate",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Array of transactional events count grouped by apiId and api version.",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            },
            "examples": {
              "application/json": "{\r\n  \"count\": [\r\n    {\r\n      \"apiName\": \"PetStoreTest\",\r\n      \"apiVersion\": \"1.0.0\",\r\n      \"count\": 2\r\n    }\r\n  ]\r\n}"
            }
          },
          "400": {
            "description": "One optional parameter along with fromDate and toDate is mandatory",
            "examples": {
              "application/json": "{ \"errorDetails\": \" Insufficient parameters. At least one parameter in addition to the creation date range must be provided.\"}"
            }
          },
          "401": {
            "description": "This response indicates that invalid credentials have been provided for the request."
          }
        }
      }
    },
    "/transactionalEvents/_search": {
      "get": {
        "security": [
          {
            "Basic": []
          }
        ],
        "description": "This method can be used to retrieve the transaction events for a given API/Application/Plan/Package for a specific period of time. Multiple request parameters of this method provide options to specify the request criteria to match the expected result and most of these input parameters supports regular expression in their values. Along with the mandatory parameters - fromDate and toDate, any one of the other filter criteria should be passed in the request.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getTransactions",
        "parameters": [
          {
            "type": "string",
            "x-example": "apiName=PetStore",
            "description": "The name of the API  for which the invocation details is required.The exact name must be provided or regular expressions can be used like API_.*",
            "name": "apiName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "apiVersion=1.0",
            "description": "The version of the API",
            "name": "apiVersion",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "apiId=105e99ee-0e1b-4afa-8ff3-4322cf296558",
            "description": "The system generated id for an API.The id of an can be retrieved from the API details screen",
            "name": "apiId",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "applicationName=HostBasedIdentifier",
            "description": "The name of the Application for which the invocation details is required.The exact name must be provided or regular expressions can be used like APP_.*",
            "name": "applicationName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "applicationId=995e99ee-0e1b-4afa-8ff3-4322cf296587",
            "description": "The system generated id for an Application.The id of an can be retrieved from the Application details screen",
            "name": "applicationId",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "pakageName=TravelPackage",
            "description": "The name of the Package for which the invocation details is required.The exact name must be provided or regular expressions can be used like Package_.*",
            "name": "packageName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "packageId=685023ee-0e1b-4afa-8ff3-4322cf296566",
            "description": "The system generated id for a Package.The id of an can be retrieved from the Package details screen",
            "name": "packageId",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "planName=GoldPlan",
            "description": "The name of the Plan  for which the invocation details is required.The exact name must be provided or regular expressions can be used like Plan_.*",
            "name": "planName",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "planId=785e99ee-0e1b-4afa-8ff3-4322cf296566",
            "description": "The system generated id for a Plan.The id of an can be retrieved from the Plan details screen",
            "name": "planId",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "x-example": "from=0",
            "description": "This parameter specifies the index from which the data has to be retrieved from the store. It is mainly used during pagination where the data is retrieved in batches",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "x-example": "size=1",
            "description": "This parameter specifies the number of records that should be present in the response. This can be combined with the parameter - from to get the records in batches during pagination.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "fromDate=2017-02-26",
            "description": "This is the date from which the invocation details has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter",
            "name": "fromDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "toDate=2017-02-27",
            "description": "This is the date to which the invocation details has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter",
            "name": "toDate",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Array of transactional events.",
            "schema": {
              "$ref": "#/definitions/TransactionEvent"
            },
            "examples": {
              "application/json": "{\r\n  \"transaction\": [\r\n    {\r\n      \"creationDate\": 1487229288461,\r\n      \"apiName\": \"PetStoreTest\",\r\n      \"apiVersion\": \"1.0.0\",\r\n      \"apiId\": \"73c40484-678a-4fb0-a56c-21119869e5f4\",\r\n      \"totalTime\": 1386,\r\n      \"providerTime\": 1336,\r\n      \"applicationName\": \"testApp\",\r\n      \"applicationId\": \"10727b01-e13a-4c5d-b39e-c5c336101e21\",\r\n      \"status\": \"SUCCESS\",\r\n      \"totalDataSize\": 1341,\r\n      \"responseCode\": \"200\",\r\n      \"operationName\": \"/pet\",\r\n      \"httpMethod\": \"post\",\r\n      \"packageName\": \"TestPackage\",\r\n      \"packageId\": \"7aafd5c8-3ea4-454f-ae78-d9ffc328672a\",\r\n      \"planName\": \"TestPlan\",\r\n      \"planId\": \"70369925-27f9-4c8a-b078-ca057516735e\"\r\n    }\r\n  ]\r\n}"
            }
          },
          "400": {
            "description": "One optional parameter along with fromDate and toData is required",
            "examples": {
              "application/json": "{ \"errorDetails\": \" Insufficient parameters. At least one parameter in addition to the creation date range must be provided.\"}"
            }
          },
          "401": {
            "description": "This response indicates that invalid credentials have been provided for the request."
          }
        }
      }
    }
  },
  "definitions": {
    "ExternalCallData": {
      "type": "object",
      "properties": {
        "callDuration": {
          "type": "integer",
          "format": "int64"
        },
        "callEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "callStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "externalCallType": {
          "type": "string"
        },
        "externalURL": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        }
      }
    },
    "TransactionEvent": {
      "type": "object",
      "properties": {
        "apiId": {
          "description": "API Id",
          "type": "string"
        },
        "apiName": {
          "description": "API name",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version",
          "type": "string"
        },
        "applicationId": {
          "description": "Unique Id of the application",
          "type": "string"
        },
        "applicationIp": {
          "description": "IP address of the application for the current request",
          "type": "string"
        },
        "applicationName": {
          "description": "Application name",
          "type": "string"
        },
        "cachedResponse": {
          "description": "Boolean value to indicate whether the response is served from cache",
          "type": "string"
        },
        "callbackRequest": {
          "type": "boolean"
        },
        "consumerIp": {
          "description": "IP address of the consumer for the current request",
          "type": "string"
        },
        "correlationID": {
          "description": "Correlation ID used in the logging",
          "type": "string"
        },
        "creationDate": {
          "description": "Creation time of the transaction.",
          "type": "integer",
          "format": "int64"
        },
        "customFields": {
          "description": "Custom fields to be added.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorOrigin": {
          "description": "Information of error orgination",
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "externalCalls": {
          "description": "Details of external calls made",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalCallData"
          }
        },
        "gatewayTime": {
          "description": "Time taken by the API Gateway for processing the request",
          "type": "integer",
          "format": "int64"
        },
        "httpMethod": {
          "description": "Name of the method",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "messagePayload": {
          "description": "Payload of a Websocket message",
          "type": "string"
        },
        "messageType": {
          "description": "Websocket message type",
          "type": "string"
        },
        "nativeHttpMethod": {
          "description": "Finally resolved HTTP method of native endpoint call",
          "type": "string"
        },
        "nativeReqPayload": {
          "description": "Request payload sent in native call",
          "type": "string"
        },
        "nativeRequestHeaders": {
          "description": "Request headers sent in native call",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nativeResPayload": {
          "description": "Response payload received from native call",
          "type": "string"
        },
        "nativeResponseHeaders": {
          "description": "Response headers received from native call",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nativeURL": {
          "description": "Finally resolved URL of native endpoint call",
          "type": "string"
        },
        "operationName": {
          "description": "Operation name of the incoming request",
          "type": "string"
        },
        "origin": {
          "description": "Origin of a Websocket message",
          "type": "string"
        },
        "packageId": {
          "description": "Id of the package.",
          "type": "string"
        },
        "packageName": {
          "description": "Package name",
          "type": "string"
        },
        "planId": {
          "description": "Id of the Plan",
          "type": "string"
        },
        "planName": {
          "description": "Plan name",
          "type": "string"
        },
        "providerTime": {
          "description": "Time taken by the native provider for processing the request",
          "type": "integer",
          "format": "int64"
        },
        "queryParameters": {
          "description": "Incoming query parameters",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reqPayload": {
          "description": "The complete request payload",
          "type": "string"
        },
        "requestHeaders": {
          "description": "Incoming request headers",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resPayload": {
          "description": "The complete response payload",
          "type": "string"
        },
        "responseCode": {
          "description": "Response status code",
          "type": "string"
        },
        "responseHeaders": {
          "description": "Outgoing response headers",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sessionId": {
          "description": "Unique Id of the session",
          "type": "string"
        },
        "sourceGateway": {
          "type": "string"
        },
        "sourceGatewayDetails": {
          "type": "string"
        },
        "sourceGatewayNode": {
          "description": "The node which processed the request, in a multi node gateway",
          "type": "string"
        },
        "status": {
          "description": "Status of the request",
          "type": "string"
        },
        "totalDataSize": {
          "description": "Total size of the payload",
          "type": "integer",
          "format": "int64"
        },
        "totalTime": {
          "description": "Total time taken for processing the request",
          "type": "integer",
          "format": "int64"
        },
        "tracerIds": {
          "description": "The tracing ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TransactionResponse": {
      "type": "object",
      "properties": {
        "apiId": {
          "description": "API Id",
          "type": "string"
        },
        "apiName": {
          "description": "API name",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version",
          "type": "string"
        },
        "count": {
          "description": "The total number of invocations based on the provided filter criteria",
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "securityDefinitions": {
    "Basic": {
      "description": "API Gateway Administrator and API Gateway provider",
      "type": "basic"
    }
  }
}